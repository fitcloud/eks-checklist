name: Build & Upload Release Assets

on:
  release:
    types: [created]

permissions:
  contents: write

jobs:
  build:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        os: [darwin, linux, windows]
        arch: [amd64, arm64]

    steps:
      - uses: actions/checkout@v3

      - uses: actions/setup-go@v4
        with:
          go-version: '1.21'
          cache: true

      # 1) 메타 정보: 파일명 생성
      - id: meta
        run: |
          ext=""
          if [ "${{ matrix.os }}" = "windows" ]; then ext=".exe"; fi
          echo "filename=eks-checklist-${{ github.ref_name }}-${{ matrix.os }}-${{ matrix.arch }}$ext" >> $GITHUB_OUTPUT

      # 2) 크로스 컴파일용 GOOS/GOARCH 설정
      - name: Build executable
        env:
          GOOS: ${{ matrix.os }}
          GOARCH: ${{ matrix.arch }}
        run: |
          mkdir -p dist
          go build -ldflags="-s -w" \
            -o dist/${{ steps.meta.outputs.filename }} \
            ./main.go

      # 3) 릴리즈 에셋 업로드
      - name: Upload release asset
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ github.event.release.upload_url }}
          asset_path: dist/${{ steps.meta.outputs.filename }}
          asset_name: ${{ steps.meta.outputs.filename }}
          asset_content_type: application/octet-stream
