markdown_extensions:
  - pymdownx.highlight:
      anchor_linenums: true
      line_spans: __span
      pygments_lang_class: true
  - pymdownx.inlinehilite
  - pymdownx.snippets
  - pymdownx.superfences
  - pymdownx.tabbed:
      alternate_style: true

extra_css:
  - assets/css/custom.css

site_name: "EKS Checklist Runbooks"
theme:
  name: "material"
  features:
    - content.code.copy
    - content.code.select
nav:
    - Home : 
      - Welcome : guidedocs/guide.md
      - How it works : guidedocs/howitworks.md
    - Runbook:
      - Home : index.md
      - General:
        - 컨테이너 이미지 태그에 latest 미사용 : general/noLatestTag.md
        - GitOps 적용 : general/gitOps.md
        - 코드형 인프라 : general/iac.md
      - Security:
        - EKS 클러스터 API 엔드포인트 접근 제어 : security/apiEndpointAccess.md
        - IRSA 또는 EKS Pod Identity 기반 권한 부여 : security/podIamAuth.md
        - 데이터 플레인 노드에 필수로 필요한 IAM 권한만 부여: security/minimalNodeIam.md
        - 루트 유저가 아닌 유저로 컨테이너 실행: security/nonRootUser.md
        - Audit 로그 활성화 : security/auditLogging.md
        - 데이터 플레인 사설망 : security/privateNodes.md
        - 클러스터 접근 제어(Access entries, aws-auth 컨피그맵) : security/clusterAccessControl.md
        - 컨테이너 이미지 정적 분석 : security/imageScanning.md
        - 읽기 전용 파일시스템 사용 : security/readOnlyRootFS.md
        - 멀티 태넌시 적용 유무 : security/multiTenancy.md
        - Pod-to-Pod 접근 제어 : security/podToPodAccess.md
        - PV 암호화 : security/pvEncryption.md
        - Secret 객체 암호화 : security/secretEncryption.md
        - 비정상 접근에 대한 알림 설정 : security/unauthorizedAlerting.md
      - Scalability:
        - karpenter 사용 : scalability/karpenterEnabled.md
        - 다양한 인스턴스 타입 사용 : scalability/instanceDiversity.md
        - Application에 Graceful shutdown 적용 : scalability/gracefulShutdown.md
        - Karpenter 전용 노드 그룹 혹은 Fargate 사용 : scalability/karpenterOrFargate.md
        - 중요 Pod에 노드 삭제 방지용 Label 부여 : scalability/podEvictionProtection.md
        - 노드 확장/축소 정책 적용 : scalability/nodeAutoScaling.md
        - Spot 노드 사용시 Spot 중지 핸들러 적용 : scalability/spotTerminationHandler.md
      - Stability:
        - 싱글톤 Pod 미사용 : stability/noSingletonPod.md
        - 2개 이상의 Pod 복제본 사용 : stability/multiplePodReplicas.md
        - Cluster Autoscaler 적용 : stability/clusterAutoscaler.md
        - CoreDNS에 HPA 적용 : stability/corednsHPA.md
        - DNS 캐시 적용 : stability/dnsCaching.md
        - HPA 적용 : stability/hpaEnabled.md
        - 다수의 가용 영역에 데이터 플레인 노드 배포 : stability/multiAzNodes.md
        - Probe(Startup, Readiness, Liveness) 적용 : stability/probeConfigured.md
        - 반영구 저장소에 애플리케이션 로그 저장 : stability/persistentLogStorage.md
        - 오토스케일링 그룹 기반 관리형 노드 그룹 생성 : stability/managedNodeGroupASG.md
        - Karpenter 사용시 DaemonSet에 Priority Class 부여 : stability/daemonSetPriorityClass.md
        - 동일한 역할을 하는 Pod를 다수의 노드에 분산 배포 : stability/podSpreadAcrossNodes.md
        - 애플플케이션 중요도에 따른 QoS 적용 : stability/qosByPriority.md
        - 애플리케이션에 적절한 CPU/RAM 할당 : stability/resourceRequestsLimits.md
        - PV 사용시 volume affinity 위반 사항 체크 : stability/volumeAffinityCheck.md
        - 인프라 및 애플리케이션 모니터링 스택 적용 : stability/monitoringStack.md
        - 중요 워크로드에 대한 PDB(Pod Distruption Budget) 적용 : stability/pdbByPriority.md
        - Karpenter 기반 노드 생성 : stability/karpenterNodes.md
      - Network:
        - AWS Load Balancer Controller 사용 : network/albController.md
        - VPC 서브넷에 충분한 IP 대역대 확보 : network/subnetIpCapacity.md
        - Pod Readiness Gate 적용 : network/readinessGate.md
        - kube-proxy에 IPVS 모드 적용 : network/kubeProxyIpvsMode.md
        - ALB_NLB의 대상으로 Pod의 IP 사용 : network/podIpTarget.md
        - VPC CNI의 Prefix 모드 사용 : network/vpcCniPrefixMode.md
      - Cost:
        - kubecost : cost/kubecost.md