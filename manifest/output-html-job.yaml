apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: eks-checklist-role
rules:
- apiGroups: [""]
  resources: [
    "nodes",
    "pods",
    "services",
    "namespaces",
    "persistentvolumes",
    "persistentvolumeclaims",
    "secrets",
    "configmaps",
    "serviceaccounts",
    "endpoints"
  ]
  verbs: ["get", "list"]
- apiGroups: ["apps"]
  resources: [
    "deployments",
    "daemonsets",
    "statefulsets",
    "replicasets"
  ]
  verbs: ["get", "list"]
- apiGroups: ["autoscaling"]
  resources: ["horizontalpodautoscalers"]
  verbs: ["get", "list"]
- apiGroups: ["rbac.authorization.k8s.io"]
  resources: [
    "roles",
    "clusterroles",
    "rolebindings",
    "clusterrolebindings"
  ]
  verbs: ["get", "list"]
- apiGroups: ["networking.k8s.io"]
  resources: ["networkpolicies", "ingresses"]
  verbs: ["get", "list"]
- apiGroups: ["discovery.k8s.io"]
  resources: ["endpointslices"]
  verbs: ["get", "list"]
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: eks-checklist-binding
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: eks-checklist-role
subjects:
- kind: ServiceAccount
  name: eks-checklist-sa
  namespace: default
---
apiVersion: batch/v1
kind: Job
metadata:
  name: eks-checklist-job
spec:
  template:
    spec:
      serviceAccountName: eks-checklist-sa  # 서비스 어카운트 지정
      containers:
        - name: eks-checklist
          image: public.ecr.aws/x5b3c7k0/eks-checklist:test
          command: ["/bin/sh", "-c"]
          args:
            - >
              /eks-checklist --sort --output html &&
              echo "Sleeping for 300 seconds..." &&
              sleep 300
          env:
            - name: IN_K8S
              value: "true"  # Kubernetes 환경에서 실행 중임을 나타내는 환경 변수
          volumeMounts:
            - name: output-volume
              mountPath: /output  # 결과를 output 디렉터리에 저장
      volumes:
        - name: output-volume
          emptyDir: {}  # 출력 결과 저장을 위한 EmptyDir 설정
      restartPolicy: Never
